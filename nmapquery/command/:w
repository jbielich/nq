import sqlite3
import os
import sys
import time
from libnmap.parser import NmapParser
from db import nqdb

def save_hosts(db, sid, hosts):
    print "saving host information..."

    try:
        sql = """INSERT INTO hosts(sid, ip4, hostname,
        status, mac, vendor, uptime, tcpcount, udpcount)
        values(?,?,?,?,?,?,?,?,?)"""

        for host in hosts:
            ip = host.address
            hostname = host.hostnames[0]  #TODO: set up for multi-hostnames
            status = host.status
            mac = host.mac
            vendor = host.vendor
            uptime = host.uptime


            tcp_no = 0
            udp_no = 0

            for port in host.get_ports():
                if port[1] == 'tcp':
                    tcp_no += 1
                elif port[1] == 'udp'
                    udp_no += 1

            values = (sid, ip, hostname, status, mac, vendor, uptime, tcpcount, udpcount)
            db.execute_with_params(sql, values)

    except:
        e = sys.exc_info()
        print e







def execute(db,filename):
    try:
        print "Loading %s into database..." % filename 

        rpt = NmapParser.parse_fromfile(filename)

        loadtime = int(time.time())

        values = (loadtime, rpt.version, int(rpt.started), int(rpt.endtime),
                  rpt.endtimestr, int(rpt.hosts_total), int(rpt.hosts_up),
                  int(rpt.hosts_down), rpt.summary)

        # Load summary data
        db.execute_with_params("""INSERT INTO
        nmap(loadtime,version,starttime, endtime, endstr,hosts_total,
        hosts_up, hosts_down,summarystr)
        values(?,?,?,?,?,?,?,?,?)""", values)

        # Get SID (global key)
        cur = db.query("""SELECT sid FROM nmap WHERE loadtime={0}""".format(loadtime))
        sid = cur.fetchone()[0]

        save_hosts(db, sid, rpt.hosts)





        print "File loaded."
    except:
        e = sys.exc_info()
        print e
